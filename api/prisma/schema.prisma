generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  isActive Boolean @default(true) @map("is_active")

  // relations
  profile         Profile?
  createdTokens   Token[]   @relation("createdByUser")
  updatedTokens   Token[]   @relation("updatedByUser")
  createdProjects Project[] @relation("createdByUser")
  updatedProjects Project[] @relation("updatedByUser")
  createdChannels Channel[] @relation("createdByUser")
  updatedChannels Channel[] @relation("updatedByUser")

  @@map("users")
}

model Profile {
  id        Int     @id @default(autoincrement())
  userId    Int     @unique
  firstName String  @map("first_name")
  lastName  String? @map("last_name")

  // relations
  user User @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model Token {
  id        Int      @id @default(autoincrement())
  label     String
  token     String
  createdBy Int      @map("created_by")
  updatedBy Int?     @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(0)

  // relations
  createdByUser User  @relation("createdByUser", fields: [createdBy], references: [id])
  updatedByUser User? @relation("updatedByUser", fields: [updatedBy], references: [id])

  @@map("tokens")
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdBy Int      @map("created_by")
  updatedBy Int?     @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(0)

  // relations
  createdByUser User      @relation("createdByUser", fields: [createdBy], references: [id])
  updatedByUser User?     @relation("updatedByUser", fields: [updatedBy], references: [id])
  channels      Channel[]
  insights      Insight[]

  @@map("projects")
}

model Channel {
  id        Int      @id @default(autoincrement())
  name      String
  position  Int
  projectId Int      @map("project_id")
  createdBy Int      @map("created_by")
  updatedBy Int?     @map("updated_by")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(0)

  // relations
  project       Project @relation(fields: [projectId], references: [id])
  createdByUser User    @relation("createdByUser", fields: [createdBy], references: [id])
  updatedByUser User?   @relation("updatedByUser", fields: [updatedBy], references: [id])
  events        Event[]

  @@unique([projectId, name])
  @@map("channels")
}

model Event {
  id          BigInt   @id @default(autoincrement())
  emoji       String
  name        String
  description String?
  channelId   Int      @map("channel_id")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(0)

  // relations
  channel Channel    @relation(fields: [channelId], references: [id])
  tags    EventTag[]

  @@index([channelId], name: "idx_events_channel_id")
  @@map("events")
}

model EventTag {
  id        BigInt   @id @default(autoincrement())
  key       String
  value     String
  eventId   BigInt   @map("event_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(0)

  // relations
  event Event @relation(fields: [eventId], references: [id])

  @@index([eventId], name: "idx_event_tags_event_id")
  @@map("event_tags")
}

model Insight {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  value       String
  emoji       String
  position    Int
  projectId   Int      @map("project_id")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(0)
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamptz(0)

  // relations
  project Project @relation(fields: [projectId], references: [id])

  @@unique([projectId, name])
  @@index([projectId], name: "idx_insights_project_id")
  @@map("insights")
}
